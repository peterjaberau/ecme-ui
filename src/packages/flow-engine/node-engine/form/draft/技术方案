___________Store____________

Store  存储表单数据 Values

Values Tree

{
    f1: {
        f11:
        f12:
    }
    f2:
}


// 负责数据的增删查改，以及事件
// 在表单引擎初始化时初始化， 为单例
Store {

    // 属性
    - values

    // 方法
    - getValueIn(path)
    - getStateIn(path)

    // 事件
    - onValuesChanged
}


__________Path_____________

Path =  string | string [] | Path



___________Field_____________

// 表单项内部模型
FieldModel {

    - name
    - ref

    - get value
    - set value

    - state
    - set state

    - parent: FieldModel[] // 用于事件冒泡
    - children: FieldModel[]

    - onValueChange
    - onStateChange
    - onFocus
    - onBlur

}

// 表单项对外门面模型
Field {
    - name
    - value
    - onChange
    - onFocus
    - onBlur
    - validate // 触发校验
    - state: FieldState
}


__________校验 & effect_____________

// 独立维护校验和effect， 不耦合到FieldModel中
// 通过事件驱动执行

RulesMap: WeakMap<FieldModel, Rules>
EffectsMap: WeakMap<FieldModel, Effects>

___________FormModel_______________

// 表单内部模型
FormModel {

    - context
    - ref
    - initialValues

    - get values
    - set values

    - get states
    - set states

    - field: FieldModel
}

// 表单对外门面模型
Form {
    - context
    - initialValues

    - values
    - state: Proxy<FormState>

    - getValueIn(path)
    - setValueIn(path)

    // 以下，目前业务没有用到，按需实现

    - setErrorIn

    - reset()
    - resetField(path)

    - setFocus

}


